#!/usr/bin/perl
# -*- mode: perl; perl-indent-level: 2; -*-

use strict; 
use Warehouse;
use Warehouse::Manifest;
use Warehouse::Stream;

my %opt;
while ($ARGV[0] =~ /^-/)
{
  local $_ = shift @ARGV;
  if (/^--([^=]+)(=(.*))?$/)
  {
    $opt{$1} = defined($2) ? $3 : 1;
  }
  elsif (/^-([^-=]+)$/)
  {
    foreach (split ("", $1))
    {
      $opt{$_} = 1;
    }
  }
}

die <<EOF if @ARGV < 2 || @ARGV > 3;
usage:
       mrs-fetch [options] manifestkey subdir [filename]
       mrs-fetch [options] manifestkey subdirprefix* [filename]
       mrs-fetch [options] manifestkey * [filename]
options:
   -h           suppress one-line stream header (subdir - pos:size:filename ...)
   --no-gunzip  don\'t automatically uncompress .gz files

EOF

STDOUT->autoflush (1);
close STDIN;

my $manifestkey = shift @ARGV;
my $subdir = shift @ARGV;
my $wantfilename = shift @ARGV;
my $gunzip_pipe_open = 0;

my $whc = new Warehouse;
my $manifest = new Warehouse::Manifest (whc => $whc,
					key => $manifestkey);
my $foundstuff = 0;
$manifest->rewind;
while (my $stream = $manifest->subdir_next)
{
  if ($stream->name eq $subdir
      || $subdir eq '*'
      || ($subdir =~ /\*$/ && $stream->name =~ /^\Q$`\E/))
  {
    while (my ($pos, $size, $filename) = $stream->file_next)
    {
      last if !defined $pos;
      if (!defined $wantfilename || $filename eq $wantfilename)
      {
	my $outname = $filename;
	$outname =~ s/\.gz$// if !$opt{"no-gunzip"};
	if (!$opt{"h"})
	{
	  print "$subdir - 0::$outname\n";
	}
	$opt{"h"} = 1;
	$stream->seek ($pos);
	while (my $dataref = $stream->read_until ($pos + $size))
	{
	  out ($dataref, $filename);
	}
	$foundstuff = 1;
      }
    }
  }
}
out();
exit 0 if $foundstuff;
die "$wantfilename in $subdir: file not found" if defined $wantfilename;
die "subdir $subdir not found in manifest $manifestkey";

sub out
{
  my ($dataref, $filename) = @_;
  if (defined $filename)
  {
    my $want_gunzip = !$opt{"no-gunzip"} && $filename =~ /\.gz$/;
    if ($gunzip_pipe_open && !$want_gunzip)
    {
      close GUNZIP_PIPE or die "close gunzip pipe: $!";
      $gunzip_pipe_open = 0;
    }
    elsif (!$gunzip_pipe_open && $want_gunzip)
    {
      open GUNZIP_PIPE, "|-", "gunzip", "-c" or die "open gunzip pipe: $!";
      GUNZIP_PIPE->autoflush (1);
      $gunzip_pipe_open = 1;
    }
    if ($gunzip_pipe_open)
    {
      print GUNZIP_PIPE $$dataref;
    }
    else
    {
      print $$dataref;
    }
  }
  else
  {
    if ($gunzip_pipe_open)
    {
      close GUNZIP_PIPE or die "close gunzip pipe: $!";
      $gunzip_pipe_open = 0;
    }
  }
}
