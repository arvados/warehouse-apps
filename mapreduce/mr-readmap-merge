#!/usr/bin/perl
# -*- mode: perl; perl-indent-level: 2; -*-

###MR_DESCRIPTION:add counts from bwa-readmap steps
###MR_INPUT:manifest

use Warehouse;
use Warehouse::Manifest;
use Warehouse::Stream;
use IO::Uncompress::AnyUncompress 'anyuncompress';

my $out = $ENV{MR_JOBSTEP_TMP}."/out";
mkdir $out;

my $whc = new Warehouse;
my $in = new Warehouse::Manifest (whc => $whc,
				  key => $ENV{MR_INPUT});
my %count_comp, %count_comb;
while (my $s = $in->subdir_next)
{
  while (my ($pos, $size, $filename) = $s->file_next)
  {
    last if !defined $pos;

    my $hash;
    if ($filename =~ /\.comb\b/) { $hash = \%count_comb; }
    elsif ($filename =~ /\.comp\b/) { $hash = \%count_comp; }
    else { next; }

    print STDERR "$filename\n" if $ENV{MR_DEBUG} || $ENV{DEBUG};
    my $zbuf = "";
    $s->seek ($pos);
    while (my $dataref = $s->read_until ($pos+$size)) {
      $zbuf .= $$dataref;
    }
    my $buf;
    anyuncompress \$zbuf => \$buf;
    my $linenumber = 1;
    while ($buf =~ /(.*)/gm) {
      next if $linenumber++ == 1;
      my ($key, $count) = split ("\t", $1);
      $$hash{$key} = 0 if !exists $$hash{$key};
      $$hash{$key} += $count;
    }
  }
}

open X, ">", "$out/comb.count" or die "comb.count: $!";
print X ($_, "\t", $count_comb{$_}, "\n") foreach sort keys %count_comb;
close X or die "comb.count: $!";

open X, ">", "$out/comp.count" or die "comp.count: $!";
print X ($_, "\t", $count_comp{$_}, "\n") foreach sort keys %count_comp;
close X or die "comp.count: $!";

my $output = `whput -r $out`;
die "whput exited $?" if $?;

print STDERR "+++mrout $output+++\n";
exit 0;
