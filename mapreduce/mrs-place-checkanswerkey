#!/usr/bin/perl
# -*- mode: perl; perl-indent-level: 2; -*-

use strict;

my @fieldname;
my @fieldtype;
my %col;			# fieldname => col#
my $mercount;
my $have_answer_key;
my $answer_key_has_smallgaps;
my %answer_key_offset;

my $read_id_col;
my $side_col;
my $ref_col;
my $aside_col;
my $aref_col;

my @mersize;
my @gapmin;
my @gapmax;
for (split (/,/, $ENV{KNOB_MERS_AND_GAPS}))
{
  if (@mersize > @gapmin)
  {
    my @gap = split (/-/);
    push @gapmin, $gap[0];
    push @gapmax, $gap[-1];
  }
  else
  {
    push @mersize, $_;
  }
}

while (<>)
{
  chomp;
  if (/^\#/)
  {
    if (!defined ($mercount) && /^\# field "(.*?)" "(.*?)"/)
    {
      push @fieldname, $1;
      push @fieldtype, $2;
      $col{$1} = $#fieldname;
    }
    next;
  }
  header();
  my (@fields) = split (/ /);
  my @pos = map { $fields[$col{"pos$_"}] } (0..$mercount-1);
  my $snps = grep { $fields[$col{"snppos$_"}] ne "-1" } (0..$mercount-1);
  my @out = ($fields[$read_id_col],
	     $fields[$side_col],
	     $snps,
	     $fields[$ref_col],
	     @pos);
  if ($have_answer_key)
  {
    my $correct = 1;
    $correct &&= $fields[$aref_col] eq $fields[$ref_col];
    $correct &&= $fields[$aside_col] eq $fields[$side_col];
    for (0..$mercount-1)
    {
      $correct &&= $fields[$col{"apos$_"}] == $pos[$_];
    }
    push @out, ($correct ? 1 : 0);
  }
  print "@out\n";
}
header();

sub header
{
  if (!defined $mercount)
  {
    $mercount = grep { /^pos\d+$/ } @fieldname;

    my $read_id_colname;
    if (exists $col{"sample"}) { $read_id_colname = "sample"; }
    else { die "can't find \"sample\" column in input file" }
    $read_id_col = $col{$read_id_colname};
    my $read_id_type = $fieldtype[$read_id_col];

    print <<EOF;
#: taql-0.1/text
# field "$read_id_colname" "$read_id_type"
# field "side" "int8"
# field "snps" "int8"
# field "ref" "sym"
EOF
    ;
    for (0..$mercount-1)
    {
      print qq{\# field "pos$_" "uint32"\n};
    }
    if ($have_answer_key = exists $col{"apos0"} && exists $col{"aref"})
    {
      print qq{\# field "correct" "int8"\n};
    }
    print qq{\#.\n};

    $side_col = $col{"side"} or die "couldn't find \"side\" column in input";
    $ref_col = $col{"ref"} or die "couldn't find \"ref\" column in input";
    $aside_col = $col{"aside"} or die "couldn't find \"aside\" column in input";
    $aref_col = $col{"aref"} or die "couldn't find \"aref\" column in input";
  }
}
