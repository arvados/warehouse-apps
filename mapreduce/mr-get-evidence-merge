#!/usr/bin/perl

use Warehouse;
use Warehouse::Manifest;
use Warehouse::Stream;
use Safepipe;

chdir ($ENV{MR_JOBSTEP_TMP})
    or die "chdir $ENV{MR_JOBSTEP_TMP}: $!";
mkdir ("out")
    or die "mkdir out: $!";
chdir ("out")
    or die "chdir out: $!";

my %dirs;
my $dir = $ENV{MR_INPUT};
my $whc = new Warehouse;
my $m = new Warehouse::Manifest (whc => $whc,
				 key => $ENV{MR_INPUT0});
$m->rewind;
while (my $s = $m->subdir_next)
{
    if ($ENV{MR_LEVEL} == 0) {
	my $dir = $s->name;
	if ($dir !~ /^\.\/[0-9a-f]+-out$/) {
	    warn "Ignoring stream: $dir";
	}
	elsif (!exists $dirs{$dir}) {
	    $dirs{$dir} = 1;
	    print STDERR "+++mrjobstep 1 $dir+++\n";
	}
	next;
    }
    elsif ($s->name ne $dir) {
	next;
    }

    if (!-d $dir) {
	mkdir ($dir) or die "mkdir $dir: $!";
    }

    my $is_just_metadata = 1;
    $s->rewind;
    while (my ($pos, $size, $filename) = $s->file_next) {
	last if !defined $pos;
	$is_just_metadata = 0 if $filename eq 'ns.gff.gz';
    }
 
    $s->rewind;
    while (my ($pos, $size, $filename) = $s->file_next)
    {
	last if !defined $pos;
	if ($filename eq 'ns.gff.gz') {
	    open OUT, "|gzip -cd >>$dir/ns.gff" or die "gzip open: $!";
	}
	elsif (($is_just_metadata && $filename =~ /^(metadata|missing_coding)\.json/)
	       ||
	       (!$is_just_metadata && $filename =~ /^get-ev(idence|_genes)(-chr\w+)?.json/)
	       ||
	       (!$is_just_metadata && $filename =~ /^(metadata|missing_coding)-chr\w+\.json/)) {
	    open OUT, ">>", "$dir/$filename";
	}
	else {
	    next;
	}
	$s->seek ($pos);
	while (my $dataref = $s->read_until ($pos + $size))
	{
	    print OUT $$dataref or die "write: $!";
	}
	close OUT or die "close: $!";
    }
}
exit 0 if $ENV{MR_LEVEL} == 0;

if (<./$dir/metadata-chr*.json>) {
    system ("mrs-get-evidence-merge-metadata ./'$dir'/metadata-chr*.json >./'$dir'/metadata.json") == 0
	or die "merge-metadata: $!";
    unlink (<$dir/metadata-chr*.json>);

    for my $missing_coding_file (<$dir/missing_coding-chr*.json>) {
	my ($chr) = $missing_coding_file =~ /.*(chr\w+)/;
	system (qq{egrep '"chr": ?"$chr"' $missing_coding_file >> ./'$dir'/missing_coding.json});
    }
    unlink (<$dir/missing_coding-chr*.json>);
}

system ('$GZIP_COMMAND */ns.gff') == 0 or die "gzip: $!";
Safepipe::readfrom ('main::IN',
		    "whput -r .",
		    'mrs-output')
    or die "pipe failed: $!";
close IN or die "pipe failed: $!";
exit 0;
