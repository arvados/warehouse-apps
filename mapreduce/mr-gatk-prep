#!/usr/bin/perl
# -*- mode: perl; perl-indent-level: 2; -*-

###MR_DESCRIPTION:preprocess aligned bam files to suit GATK
###MR_INPUT:manifest
###MR_KNOBS:PICARD_ZIP
###MR_KNOBS:GATK_BUNDLE
###MR_KNOBS:RG_PLATFORM

use strict; 
use Warehouse;
use Warehouse::Manifest;
use Warehouse::Stream;
use Safepipe;
use Safeget;
use Fcntl ':flock';
use List::Util qw'min max';

my $jobstep_tmp = $ENV{MR_JOBSTEP_TMP};
my $job_tmp = $ENV{MR_JOB_TMP};
my $mem_limit = max($ENV{MR_SLOT_RAM_MB} - 700, 500);

Safeget::wh_manifest_tree ($ENV{KNOB_PICARD_ZIP}, "$job_tmp/picard");
die "picard $ENV{MR_PICARD_ZIP}: $!" unless 0 ==
    system "unzip -d '$jobstep_tmp/picard' '$job_tmp/picard/'*.zip";
my ($picard_dir) = <$jobstep_tmp/picard/picard-tools-*>;

my $platform = $ENV{KNOB_RG_PLATFORM} || "illumina";

my $whc = new Warehouse;
my $m = new Warehouse::Manifest (whc => $whc, key => $ENV{MR_INPUT0});
$m->rewind;
my $i = -1;
while (my $s = $m->subdir_next) {
  while (my ($pos, $size, $filename) = $s->file_next) {
    last if !defined $pos;
    ++$i;
    if ($ENV{MR_LEVEL} == 0) {
      print STDERR "+++mrjobstep 1 $i+++\n" if $filename =~ /\.bam$/;
    } elsif ($i == $ENV{MR_INPUT}) {
      go($s, $pos, $size, $filename);
      exit 0;
    }
  }
}
if ($ENV{MR_LEVEL} == 0) {
  print STDERR "+++mrout d41d8cd98f00b204e9800998ecf8427e+++\n";
  exit 0;
}

sub go {
  my ($stream, $pos, $size, $filename) = @_;

  for my $part (qw(dict fasta.fai fasta)) {
    Safeget::wh_file("$ENV{KNOB_GATK_BUNDLE}/human_g1k_v37.$part.gz", "$job_tmp/human_g1k_v37.$part");
  }

  open INPUTBAM, ">", "$jobstep_tmp/input.bam" or die "input.bam: $!";
  $stream->rewind;
  $stream->seek ($pos);
  while (my $dataref = $stream->read_until ($pos + $size))
  {
    print INPUTBAM $$dataref or die "input.bam: $!";
  }
  close INPUTBAM or die "input.bam: $!";

  my $filename_bai = $filename;
  $filename_bai =~ s/\.bam$/.bai/;

  Safepipe::readfrom ("main::S",

		      "java -Xmx${mem_limit}m -Djava.io.tmpdir='$jobstep_tmp' ".
		      "-jar $picard_dir/FixMateInformation.jar ".
		      "I=$jobstep_tmp/input.bam O=/dev/stdout ".
		      "QUIET=true ".
		      "SO=coordinate ".
		      "VALIDATION_STRINGENCY=LENIENT ".
		      "COMPRESSION_LEVEL=0",

		      "java -Xmx${mem_limit}m -Djava.io.tmpdir='$jobstep_tmp' ".
		      "-jar $picard_dir/SortSam.jar ".
		      "I=/dev/stdin O=/dev/stdout ".
		      "QUIET=true ".
		      "SO=coordinate ".
		      "VALIDATION_STRINGENCY=LENIENT ".
		      "COMPRESSION_LEVEL=0",

		      "java -Xmx${mem_limit}m -Djava.io.tmpdir='$jobstep_tmp' ".
		      "-jar $picard_dir/ReorderSam.jar ".
		      "I=/dev/stdin O=/dev/stdout ".
		      "QUIET=true ".
		      "REFERENCE='$job_tmp/human_g1k_v37.fasta' ".
		      "VALIDATION_STRINGENCY=LENIENT ".
		      "COMPRESSION_LEVEL=0",

		      "java -Xmx${mem_limit}m -Djava.io.tmpdir='$jobstep_tmp' ".
		      "-jar $picard_dir/AddOrReplaceReadGroups.jar ".
		      "I=/dev/stdin O=/dev/stdout ".
		      "QUIET=true ".
		      "RGLB=0 RGPL=$platform RGPU=0 RGSM=0 ".
		      "VALIDATION_STRINGENCY=LENIENT ",

		      "bash -c \"tee >(java -Xmx${mem_limit}m -Djava.io.tmpdir='$jobstep_tmp' ".
		      "-jar $picard_dir/BuildBamIndex.jar ".
		      "I=/dev/stdin O=$jobstep_tmp/output.bai ".
		      "QUIET=true ".
		      "VALIDATION_STRINGENCY=LENIENT)\" ",

		      "mrs-store . '$filename'; mrs-store . '$filename_bai' < '$jobstep_tmp/output.bai'",

		      "mrs-output",
      );
  close main::S or die;
}
