#!/usr/bin/perl

use strict;
use Fcntl qw/ :seek /;

my %chr_regions;

die "no SNPREFERENCE specified" unless $ENV{KNOB_SNPREFERENCE};

open R, "-|", "bash -c 'set -o pipefail; whget -r \"$ENV{KNOB_SNPREFERENCE}\" - | gzip -cdf | sort -k5'"
    or die "whget: $!";

$ENV{TMPDIR} ||= $ENV{MR_JOBSTEP_TMP};
$ENV{TMPDIR} ||= "/tmp";
my $tmpfile = "$ENV{TMPDIR}/in$$";
my $sort_cmd = $ENV{LAST_INFILENAME} =~ /brlmm/ ? "sort -k1" : "sort -k2";
open TMP, "|-",  "$sort_cmd > '$tmpfile'" or die "$sort_cmd > $tmpfile: $!";
while (<STDIN>) { s/^AFFX-/SNP_A-/; print TMP $_ }
close TMP;
open STDIN, "<", $tmpfile or die "$tmpfile: $!";
unlink $tmpfile;

open STDOUT, "|-", "sort"
    or die "sort output: $!";

my $found = 0;
my $notfound = 0;
my $r = getnextr() or die "no reference data";
while (<STDIN>)
{
    next unless /^\d/ || /^SNP_A-/;
    s/\r?\n$//;
    s/Mapping Analysis$//;	# concatenated files with no newline at end

    my (@in) = split (/\t/);
    my ($sid, $AB) = ($in[0] =~ /^SNP_A-/) ? @in[0,1] : @in[1,9];

    my $cmp;
    while ($r && ($cmp = $r->[4] cmp $sid) < 0)
    {
	$r = getnextr();
    }
    if ($r && $cmp == 0)
    {
	my ($a, $b) = split ('', $r->[3]);
	$AB =~ s/(A)|B/$1 ? $a : $b/ge;
	print join ("\t", $r->[0], $r->[1], $a, $AB,
		    $r->[4], $r->[5], $r->[6]), "\n";
	++$found;
    }
    else
    {
	++$notfound;
    }
}

close STDIN;
$r = <R> while $r;
close R;
close STDOUT or die "sort output: $!";

warn "$found rows output.\n";
warn "$notfound rows skipped, not found in reference file.\n" if $notfound;

sub getnextr
{
    local $_ = <R>;
    return undef if !defined $_;
    chomp;
    return [ split (/\t/) ];
}
