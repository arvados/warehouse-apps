#!/usr/bin/perl
# -*- mode: perl; perl-indent-level: 2; -*-

use strict; 
use Warehouse;
use Warehouse::Manifest;
use Warehouse::Stream;

$ENV{MR_JOBSTEP_TMP} ||= $ENV{TMP};
$ENV{MR_JOBSTEP_TMP} ||= "/tmp";

my %opt;
while ($ARGV[0] =~ /^-/)
{
  local $_ = shift @ARGV;
  if (/^--([^=]+)(=(.*))?$/)
  {
    $opt{$1} = $3;
  }
  elsif (/^-([^-=]+)$/)
  {
    foreach (split ("", $1))
    {
      $opt{$_} = 1;
    }
  }
}

die "usage: mrs-split-store [options] subdir filename_pattern\n"
    if @ARGV != 2;

my $subdir = shift @ARGV;
my $filename_pattern = shift @ARGV;

if ($opt{"z"}) {
  open_z();
}

my $whc = new Warehouse;
my $stream = new Warehouse::Stream (whc => $whc);
$stream->clear;
$stream->name ($subdir);
$stream->write_start (make_filename ($filename_pattern, 0));
my $lines_out = 0;
my $chunks_out = 0;
my $files_out = 0;
my $empty = 1;
while (defined ($_ = <STDIN>))
{
  if ($lines_out == $opt{"lines"} && $opt{"lines"} != 0) {
    $lines_out = 0;
    ++$chunks_out;
    do { flush_z ($stream); open_z (); } if $opt{"z"};
    $stream->write_finish;
    if ($files_out == $opt{"filesperstream"}) {
      $files_out = 0;
      print $stream->as_string;
      print STDERR $stream->as_string;

      $stream = new Warehouse::Stream (whc => $whc);
      $stream->clear;
      $stream->name ($subdir);
    }
    $empty = 1;
    ++$files_out;
  }
  if ($empty) {
    $empty = 0;
    $stream->write_start (make_filename ($filename_pattern, $chunks_out));
  }
  if ($opt{"z"}) { print Z $_ or die "gzip: $!" }
  else { $stream->write_data (\$_); }
  ++$lines_out;
}
if (!$empty) {
  flush_z ($stream) if $opt{"z"};
  $stream->write_finish;
  print $stream->as_string;
  print STDERR $stream->as_string;
}

sub make_filename
{
  my $name = shift;
  my $n = sprintf "%04d", shift;
  $name =~ s/{}/$n/ || $name =~ s/$/$n/;
  return $name;
}

sub open_z
{
  my $gzip = $ENV{GZIP} || 'gzip';
  open Z, "|-", "$gzip -n > '".$ENV{MR_JOBSTEP_TMP}."/.mrs-split-store.$$.gz'"
      or die "$gzip: error $! exit $?";
}

sub flush_z
{
  my $stream = shift;
  close Z or die "gzip: $!";
  open Z, "<", $ENV{MR_JOBSTEP_TMP}."/.mrs-split-store.$$.gz" or die "open: $!";
  my $buf;
  my $ok;
  while ($ok = read Z, $buf, 2**24) {
    $stream->write_data (\$buf);
  }
  defined $ok or die "read: $!";
  close Z or die "close: $!";
  unlink $ENV{MR_JOBSTEP_TMP}."/.mrs-split-store.$$.gz" or die "unlink: $!";
}
