#!/usr/bin/perl
# -*- mode: perl; perl-indent-level: 2; -*-

###MR_DESCRIPTION:convert solexa reads to <=2000000-read bfq streams
###MR_INPUT:hash
###MR_KNOBS:ALL2STD_PL=3733b1cc64cf5f8e59511c0ecdc42d44
###MR_KNOBS:MAQ_DEB=ec9aba3c23989d66f813589e2d4450db

use strict; 
use Warehouse;
use Safepipe;

$ENV{KNOB_ALL2STD_PL} ||= "3733b1cc64cf5f8e59511c0ecdc42d44";
$ENV{KNOB_MAQ_DEB} ||= "ec9aba3c23989d66f813589e2d4450db";

my $tmp = $ENV{MR_JOBSTEP_TMP};
chdir ($tmp) or die "chdir $tmp: $!";
mkdir "out" or die "mkdir out: $!";

my $whc = new Warehouse;

fetch_to_file ($whc, $ENV{KNOB_ALL2STD_PL}, "all2std.pl");
fetch_to_file ($whc, $ENV{KNOB_MAQ_DEB}, "maq.deb");
system ("dpkg --extract maq.deb .")
    == 0 or die "dpkg exited $?";
system ("bash -c 'set -o pipefail; whget $ENV{MR_INPUT0} - | zcat | perl all2std.pl sol2std | ./usr/bin/maq fastq2bfq -n 2000000 - out/fastq'")
    == 0 or die "whget|zcat|all2std.pl|maq pipeline exited $?";
opendir D, "out" or die "opendir: $!";
while (my $f = readdir D)
{
  if ($f =~ /^fastq\@(\d+)\.bfq/)
  {
    mkdir "out/$1" or die "mkdir out/$1: $!";
    rename "out/$f", "out/$1/$f" or die "rename out/$f out/$1/$f: $!";
  }
}
my $key = `whput out/`;
$key =~ s/^(.*? |)([0-9a-f]{32}\S*).*/$2/s
    or die "whput did not provide a manifest key";
print STDERR "+++mrout $key+++\n";
exit 0;

sub fetch_to_file
{
  my ($whc, $hash, $filename) = @_;
  my $dataref = $whc->fetch_block_ref ($hash) or die "fetch $hash: ".$whc->errstr;
  open F, ">", $filename or die "open $filename: $!";
  print F $$dataref or die "write $filename: $!";
  close F or die "close $filename: $!";
  return 1;
}
