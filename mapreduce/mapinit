#!/usr/bin/perl

use strict;
use DBI;
use POSIX ':sys_wait_h';
use Fcntl qw(F_GETFL F_SETFL O_NONBLOCK);

do '/etc/polony-tools/config.pl';
my $max_njobs = 3;		# max "big job" concurrency



$SIG{CHLD} = 'IGNORE';



my $dbh = DBI->connect($main::mapreduce_dsn,
		       $main::mapreduce_mysql_username,
		       $main::mapreduce_mysql_password);
die $DBI::errstr if !$dbh;
createtables ($dbh);



# Wait for a job to appear in the queue

my $children = 0;
while (1)
{

  my $sth = $dbh->prepare ("select id, nprocs, revision from mrjob
                            where jobmanager_id is null limit 1");
  $sth->execute or die $dbh->errstr;
  my ($job_id, $job_nprocs, $job_revision) = $sth->fetchrow_array;

  if ($job_id)
  {
    my $child = fork();
    if (!defined $child)
    {
      warn "Couldn't fork: $!";
    }
    elsif ($child)
    {
      # XXX shouldn't have to reconnect here??? XXX
      $dbh = DBI->connect($main::mapreduce_dsn,
			  $main::mapreduce_mysql_username,
			  $main::mapreduce_mysql_password);
      die $DBI::errstr if !$dbh;
      if ($children >= $max_njobs)
      {
	wait;
      }
      else
      {
	++$children;
      }
    }
    else
    {
      $SIG{CHLD} = 'DEFAULT';
      close(STDIN);

      $dbh->{InactiveDestroy} = 1;
      undef $dbh;
      undef $sth;

      # XXX this should run under "salloc" XXX
      exec ("mrjobmanager", $job_id);
      exit (1);
    }
  }
  sleep (5);

  if (waitpid (-1, WNOHANG) > 0)
  {
    --$children;
  }
}


sub createtables
{
  my $dbh = shift;
  foreach (qq{
create table if not exists mrlog (
 id bigint not null auto_increment primary key,
 time datetime not null,
 jobid bigint,
 jobstepid bigint,
 message varchar(255)
)
  },
	   qq{
create table if not exists mrjob (
 id bigint not null auto_increment primary key,
 revision bigint not null,
 mrfunction varchar(64),
 nprocs int,
 nodes text,
 knobs text,
 starttime datetime,
 finishtime datetime,
 jobmanager_id bigint,
 success tinyint
)
  },
	   qq{
create table if not exists mrjobstep (
 id bigint not null auto_increment primary key,
 jobid bigint not null,
 level int not null,
 input varchar(255),
 submittime datetime,
 starttime datetime,
 finishtime datetime,
 exitcode int,
 stderr text,
 attempts int not null default 0,
 index(jobid)
)
  },
	   qq{
create table if not exists mrjobmanager (
 id bigint not null auto_increment primary key,
 node varchar(63),
 starttime datetime,
 finishtime datetime,
 revision bigint,
 pid bigint
)
  })
  {
    my $sth = $dbh->prepare ($_);
    $sth->execute or die $dbh->errstr;
  }
}
