#!/usr/bin/perl

# mrtask-streaminput: read keys on stdin, output contents to stdout

use strict;
use MogileFS::Client;

my %opt;
foreach (@ARGV)
{
  if ($_ eq '--raw-images')
  {
    $opt{$_} = 1;
  }
}

my $mogc;

my $retries = 0;
while(defined ($_ = <STDIN>))
{
  chomp;
  while (!defined ($mogc) && ++$retries <= 5)
  {
    $mogc = eval {
      MogileFS::Client->new
	  (domain => $ENV{MOGILEFS_DOMAIN},
	   hosts => [split(",", $ENV{MOGILEFS_TRACKERS})]);
      };
    if (!$mogc)
    {
      warn "MogileFS connect [$ENV{MOGILEFS_DOMAIN} at $ENV{MOGILEFS_TRACKERS}] failed";
    }
  }
  die if !$mogc;

  my $bufref = $mogc->get_file_data ($_);
  if (!defined $bufref || !length ($$bufref))
  {
    warn "MogileFS get_file_data($_) failed: " . $mogc->errstr;
    undef $mogc;
    sleep 1;
    redo;
  }
  if ($opt{"--raw-images"})
  {
    my $filter = chooseimagefilter ($_);
    if ($filter)
    {
      for (1..5)
      {
	last if eval {
	  open OUT, "|$filter" or die "Filter '$filter' failed: $!";
	  print OUT $$bufref;
	  close OUT or die "Output stream exited $?";
	  1;
	};
      }
      die "$@" if $@;
    }
    else
    {
      print $$bufref;
    }
  }
  else
  {
    print $$bufref;
  }
  $retries = 0;
}

sub chooseimagefilter
{
  local ($_) = @_;
  if (/\.raw$/i) { return undef; }
  if (/\.raw\.g?z$/i) { return "zcat" }
  if (/\.tiff?$/i) { return "convert tif:- -endian lsb gray:-" }
  if (/\.tiff?\.g?z$/i) { return "zcat | convert tif:- -endian lsb gray:-" }
  die "I don't know how to convert $_ to a raw image";
}
