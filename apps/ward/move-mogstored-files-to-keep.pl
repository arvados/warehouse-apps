#!/usr/bin/perl

# Expects input in this format
#   inode number-mdate-filename-md5sum
# This input would have been generated by the calculate-mogilefs-md5sums.pl
# script.

# This script will verify that file with 'filename' exists and is unmodified (by
# verifying inode number/mdate, but *not* recalculating md5sum), and if so
# print out a move command to put the file in the corresponding Keep directory.

# flush buffer immediately
$| = 1;

my %files;

if (!$ARGV[0] || ! -f ($ARGV[0])) {
  print STDERR "The first argument must be the path to a file generated by calculate-mogilefs-md5sums.pl.\n";
  exit(1);
}

# Build hash with the keepdir for each mounted partition

my %paths;
my %keepdirs;

my $tmp = `mount |grep mogdata`;
chomp($tmp);
my @tmp = split('\n',$tmp);

foreach (@tmp) {
	my @t = split(/ /,$_);
	$paths{$t[2]} = $t[0];
}

my $mogdata = "/mogdata";
opendir(DIR, $mogdata) || die "can't opendir $mogdata: $!";
my @dirs = grep { ! /^\./ && -d "$mogdata/$_" } readdir(DIR);
closedir DIR;

foreach my $p (@dirs) {
	$p = "$mogdata/$p";
	my $keepdir = "$p/keep";

	if (!exists($paths{$p})) {
		my $tmp = readlink($p);
		# chop of last part of path
		$tmp =~ s/\/[^\/]+(\/|)$//;
		if ($tmp =~ /^\//) {
			# absolute link
			$keepdir = "$tmp/keep";
		} else {
			# relative link
			$keepdir = "/mogdata/$tmp/keep";
		}
	}
	$keepdirs{$p} = $keepdir;
}

# Done building the keepdir hash	

open(FILE, "<", $ARGV[0]);
while (<FILE>) {
  chomp;
  my @tmp = split(/-/);
  if (-f $tmp[2]) { # only keep files that actually exist
    $files{$tmp[2]}{inode} = $tmp[0];
    $files{$tmp[2]}{mtime} = $tmp[1];
    $files{$tmp[2]}{md5sum} = $tmp[3];
  }
}
close(FILE);

my $cnt = 0;

foreach my $file (keys %files) {
  if (exists($files{$file})) {
    my @stat = stat($file);
    if (($stat[1] ne $files{$file}{inode}) || ($stat[9] ne $files{$file}{mtime})) {
      print STDERR "$file has been modified, ignoring it\n" if ($ENV{DEBUG});
    } else {
      $file =~ /^(\/mogdata\/.*?)\//;
			print '.' if ((($cnt++ % 100) == 99) && $ENV{DEBUG});
      rename $file,"$keepdirs{$1}/$files{$file}{md5sum}" if (-e "$file");
    }
  }  
}
