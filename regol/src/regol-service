#!/usr/bin/perl
# -*- mode: perl; perl-indent-level: 2; -*-

use strict;
use DBI;
use Warehouse;

do '/etc/regol.conf' or die "No config file /etc/regol.conf";

my $dbh = DBI->connect(@$main::DatabaseDSN)
    or die "DBI connect failed: ".DBI->errstr;

$main::drain = 0;
$SIG{TERM} = $SIG{HUP} = $SIG{INT} = sub { $main::drain = 1; };

my $wh = $main::Warehouses;
map
{
  $wh->{$_}->{whc} = new Warehouse %{$wh->{$_}}
  or delete $wh->{$_}
} keys %$wh;

setup_tables();
while (1)
{
  foreach (keys %$wh)
  {
    update_job_table($_);    # find out about new jobs from controller
    purge_myjob_table($_);	# remove jobs after they start running
    if (count_myjobs($_) == 0) # if all of my submitted jobs are running...
    {
      schedule_something($_);
    }
    exit 0 if $main::drain;
  }
  sleep(5);
  exit 0 if $main::drain;
}


sub update_job_table
{
  my $warehousename = shift;
  return undef unless $wh->{$warehousename}->{warehouse_servers};
  my $arrayref = $wh->{$warehousename}->{whc}->job_list;
  foreach (@$arrayref)
  {
    $dbh->do ("insert ignore into job (controller,id) values (?,?)",
	      undef,
	      $wh->{$warehousename}->{warehouse_servers},
	      $_->{id});
    $dbh->do ("update job set
	       starttime=?, finishtime=?, knobs=?,
	       inputkey=?, outputkey=?, metakey=?
	       where controller=? and id=?",
	      undef,
	      $_->{starttime} || undef,
	      $_->{finishtime} || undef,
	      unescape ($_->{knobs}),
	      $_->{inputkey},
	      $_->{outputkey} || undef,
	      $_->{metakey} || undef,
	      $wh->{$warehousename}->{warehouse_servers},
	      $_->{id});
  }
}


sub purge_myjob_table
{
}


sub count_myjobs
{
  my $warehousename = shift;
  my $sth = $dbh->prepare ("select count(*) from myjob where controller=?");
  $sth->execute ($warehousename) or return -1;
  my @r = $sth->fetchrow () or return -1;
  return $r[0];
}


sub schedule_something
{
}


sub setup_tables
{
  map { $dbh->do ($_) } split (/;\n/, <<EOF);

  create table if not exists job
  (
   controller char(64),
   id bigint,
   starttime datetime,
   finishtime datetime,
   wantredo_nnodes int,
   spec_md5 char(32),
   knobs text,
   inputkey text,
   outputkey text,
   metakey text,
   unique(controller,id)
  );

  create table if not exists myjob
  (
   id bigint auto_increment primary key,
   controller char(64),
   orig_id bigint,
   unique(controller,orig_id)
  );
EOF
    ;
}


sub unescape
{
  local $_ = shift;
  s/\\n/\n/g;
  s/\\\\/\\/g;
  $_;
}
